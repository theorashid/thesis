# Some notes on the data and the models {#sec-Chapter3}

## Counts of the dead

This thesis is primarily concerned with modelling death rates for small areas in England.
This requires two data sources: counts of deaths, and populations counts.
The dataset is
In other words, every death in England from 2002 to 2019.

Data comes with information on postcode of residence

Data is extracted from ONS, held by SAHSU.
Security, deaths are identifiable.
Data updated every year, depends on extract date.
Mostly complete, but some deaths still come through later if waiting on coroner's report to identify cause

In the spirit of the Bayesian workflow, prior to fitting model, exploratory data analysis total mortality varies over different cross sections: sex, age, space, time.

Look at different cross sections, slice by age, space and time
By age + sex, log scale, death rates in 2019
Colour geom_tile plot age-specific death rates over time, trans = log
Life expectancy male and female over time
e0 aggregated 2002-19 by district

Here, taken slices, but the aim is to calculate death rates for each sex-age-space-time unit

### Geographies of England

Having already introduced the term "district" in Figure XXs, I'll briefly show the lay of the land in terms of geographies used in this thesis.
This thesis is concerned only with England, as Scotland, Wales, and Northern Ireland have their own separate deprivation data which are not comparable.
The geographies used here in England form a nested hierarchy of spatial units from regions, districts, Middle-layer Super Output Areas (MSOAs), Lower-layer Super Output Areas (LSOAs).
The numbers of each of the units are summarised in @tbl-geography.

| Geography | Number of units |
| --------- | --------------- |
| region    | 9               |
| district  | 314             |
| MSOA      | 6791            |
| LSOA      | 32844           |

: The different geographical units of England used in thesis and their numbers. {#tbl-geography}

England is divided into 9 regions (London, North West, West Midlands, etc).
Within these regions, there are 314 local authority districts.
Districts are administative geographies formed from a mixture of London boroughs, metropolitan and non-metropolitan distrcts, and unitary autorities.
They are responsible for local policies, and therefore subject to local government restructuring and bounary changes.
For stability, we chose the district boundaries from 2020.

LSOAs are a type of census geography made up of around four or five smaller units called Output Areas (OAs).
OAs are the smallest building block for census statistics, with between 40 and 250 households and typically 100 to 625 people, and are designed to have some socioeconomic homogeneity.
MSOAs are then comprised of around four or five LSOAs, and these MSOAs fit within district boundaries.
OAs, LSOAs, and MSOAs are all statisitcal units are designed by the Office for National Statistics (ONS) purely for analysis purposes, so researchers can use spatial units with similar, but small, population sizes.
No policies are created using these units [@2011CensusGeographies2022].

### Counts of the living

This second data sources we require are populations counts.
These are taken from mid-year population estimates of the usual resident population by the ONS [@MiddleSuperOutput2021; @LowerLayerSuper2021].
The ONS estimates inter-censal populations on a rolling basis, updating the previous year's value using the change in the population in the GP patient registration data as an indicator of the true population change.
The LSOA populations are fully consistent with estimates for higher levels in the nested geographical hierarchical including MSOAs, districts, regions and the national total for England [@PopulationEstimatesOutput2021].

### Deprivation data

IMD data
7 domains of deprivation
Choose 3 of the main 4 domains, but not health
Focus on income, education, – not health
Aggregate to different geographies
map of IMD for London (LSOA), and IMD for England (MSOA) in 2019 [@EnglishIndicesDeprivation2019].

## Modelling the dead

For each chapter, the quantity of interest is the same: mortality in each age group, spatial unit and year.
Empirically, death rates can be calculated from observed data as the number of deaths divided by the population in each strata.
Formally, using $a$, $s$, and $t$ to index age, spatial unit and time respectively, we write
$$
\hat{m}_{ast} = \frac{\text{deaths}_{ast}}{\text{population}_{ast}},
$$ {#eq-death-rate}
where $\hat{m}_{ast}$ is the death rate.
When the number of deaths becomes small, however, the empirical death rate presents an apparent variability from year to year, or from spatial unit to spatial unit, which is larger than the true differences in the risk of death.
The problem is exarcerbated for young ages or rare diseases, where the number of deaths might be zero, or for smaller geographical units, where the population might be zero.
Thus, we use Bayesian hierarchical models to obtain stable estimates of death rates by sharing information across age groups, spatial units, and years.
An added advantage of the Bayesian paradigm is the robust error estimates.

This is a regression task.
We simply want to smooth over the data – the models aren't being used for prediction.
We tried to design as complex a model as possible, to capture as much of the true variation in the data as possible using epidemiologcial knowledge to choose plausible effects.
In other words, the model is "full", enough paramaters to capture all the true variability.
Models are overspecified, like Bayesian neural networks (AGW paper)
The downside of this approach is that more parameters is harder to fit, and fewer parameters, or parsimonious models, makes Bayesian inference easier.

## Inference

The choice was made early in the PhD to use sampling methods for inference, as this is the "gold standard" with aymptotic guarantees of the true posterior.
Approximate inference state-of-the-art for spatial models, INLA, scales badly with the number of effects

Start with NIMBLE, group has experience with BUGS
Gibbs sampling, finds conjugate relationships where they exist
R interface but C++ backend, scales well to a large problem like this

Tried a lot of different PPLs in R, python and Julia [cite repo].
Sampling faster, more efficient NUTS
Move to NumPyro, cite batching paper.
Sampling on GPU, much faster
Created CAR distribution, contributed to open source
Tried VI methods in NumPyro, such as laplace approx, but failed to converge to sensible values without heavy customisation of variational function
